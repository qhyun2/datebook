openapi: 3.0.0
info:
  version: 1.0.0
  title: Datebook TypeScript API
  description: An API for the TypeScript Backend of Datebook


# Authentication 
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PinLogin:
      type: object
      required:
        - pin
      properties:
        pin:
          type: string
    DateNightUnindexed:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date-time
        creation:
          type: string
          format: date-time
        modification:
          type: string
          format: date-time
        title:
          type: string
        location:
          type: string
        description:
          type: string
        pictures:
            type: array
            items:
              type: string
    DateNight:
      allOf:
        - $ref: "#/components/schemas/DateNightUnindexed"
        - type: object
          properties:
            id:
              type: integer


paths:
  /dn:
    get:
      security:
        - bearerAuth: []
      tags:
        - Date Night
      description: Returns a list of date nights
      responses:
        '200':
          description: Successfully returned a list of date nights
          content:
            application/json:
              schema:
                type: array
                items:
                   $ref: "#/components/schemas/DateNight"
        '401':
          description: Unauthorized
        '500':
          description: Invalid request


    post:
      security:
        - bearerAuth: []
      tags:
        - Date Night
      description: Create a new date night
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DateNight'
      responses:
        '201':
          description: Successfully created a new date night
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '401':
          description: Unauthorized
        '500':
          description: Invalid request
  
  
  /dn/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The date night ID
      tags:
        - Date Night
      description: Returns a date night based on its ID
      responses:
        '200':
          description: Successfully returns date night based on ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DateNight"
        '401':
          description: Unauthorized
        '500':
          description: Invalid ID


    put:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The date night ID
      tags:
        - Date Night
      description: Edit a datenight based on its ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DateNight'
      responses:
        '200':
          description: Successfully edited entity based on ID
        '401':
          description: Unauthorized
        '500':
          description: Invalid request


    delete:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The date night ID
      tags:
        - Date Night
      description: Delete a date night based on its ID
      responses:
        '204':
          description: Successfully deleted date night based on ID
        '401':
          description: Unauthorized
        '500':
          description: Invalid ID


  /auth/login:
    post:
      tags:
        - Auth
      description: Login user. Supply a pin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinLogin'
      responses:
        '200':
          description:  Returns access token in response body
          content:
            application/json:
              schema:
                type: object
                properties:   
                  accessToken:
                    type: string
        '500':
          description: Invalid request
  
                  
                
  /auth/logout:
    post:
      security:
        - bearerAuth: []
      tags:
        - Auth
      description: Invalidate tokens
      responses:
        '204':
          description: Token successfully invalidated
        '401':
          description: Unauthorized
        '500':
          description: Invalid request

